<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spring-cloud on 分24期买泡面🍜</title><link>https://onlw.github.io/tags/spring-cloud/</link><description>Recent content in spring-cloud on 分24期买泡面🍜</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>1216062928@qq.com (Who)</managingEditor><webMaster>1216062928@qq.com (Who)</webMaster><copyright>© 2021 &lt;a href="">kagome&lt;/a>.</copyright><lastBuildDate>Mon, 30 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://onlw.github.io/tags/spring-cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>spring cloud config source code analysis</title><link>https://onlw.github.io/posts/201909300000/</link><pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate><author>1216062928@qq.com (Who)</author><guid>https://onlw.github.io/posts/201909300000/</guid><description>Spring Cloud Config Source code analysis config client 请求 config server接口，config server 拉取 git repository 的代码，然后反馈给 config client Config Server 入口文件 import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.cloud.config.server.EnableConfigServer; @SpringBootApplication @EnableConfigServer public class ConfigServerApplication { public static void main(String[] args) { SpringApplication.run(ConfigServerApplication.class, args); } }</description></item><item><title>Spring Cloud Ribbon</title><link>https://onlw.github.io/posts/201909180000/</link><pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate><author>1216062928@qq.com (Who)</author><guid>https://onlw.github.io/posts/201909180000/</guid><description>Introduction Spring Cloud Ribbon 是基于 Netflix Ribbon 实现的客户端负载均衡工具。 Ribbon是一个客户端负载均衡器，可以让您对HTTP和TCP客户端的行为进行大量控制。Feig</description></item><item><title>Spring Cloud Stream</title><link>https://onlw.github.io/posts/201909170000/</link><pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate><author>1216062928@qq.com (Who)</author><guid>https://onlw.github.io/posts/201909170000/</guid><description>Spring Cloud Stream Introduction Spring Cloud Stream是一种用于构建具有共享消息系统连接高度可扩展的事件驱动微服务的框架。 该框架提供了一个灵活的编程模型建立在已建立的和熟</description></item><item><title>Spring Cloud Netflix Eureka</title><link>https://onlw.github.io/posts/201909030000/</link><pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate><author>1216062928@qq.com (Who)</author><guid>https://onlw.github.io/posts/201909030000/</guid><description>Spring Cloud Netflix Eureka Introduction Service Discovery是基于微服务的体系结构的关键原则之一。尝试手动配置每个客户端或某种形式的约定可能很难做到并且可能很脆弱。Eur</description></item><item><title>Spring Cloud Config</title><link>https://onlw.github.io/posts/201909010000/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><author>1216062928@qq.com (Who)</author><guid>https://onlw.github.io/posts/201909010000/</guid><description>Spring Cloud Config Introduction Spring Cloud Config为分布式系统中的外部化配置提供服务器端和客户端支持。使用Config Server，您可以在所有环境中管理应用程序的外</description></item></channel></rss>